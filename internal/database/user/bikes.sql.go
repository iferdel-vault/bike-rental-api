// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: bikes.sql

package user

import (
	"context"
	"database/sql"
)

const listBikesAvailable = `-- name: ListBikesAvailable :many
SELECT 
	latitude, 
	longitude 
FROM bikes
WHERE is_available
`

type ListBikesAvailableRow struct {
	Latitude  sql.NullFloat64
	Longitude sql.NullFloat64
}

func (q *Queries) ListBikesAvailable(ctx context.Context) ([]ListBikesAvailableRow, error) {
	rows, err := q.db.QueryContext(ctx, listBikesAvailable)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListBikesAvailableRow
	for rows.Next() {
		var i ListBikesAvailableRow
		if err := rows.Scan(&i.Latitude, &i.Longitude); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
